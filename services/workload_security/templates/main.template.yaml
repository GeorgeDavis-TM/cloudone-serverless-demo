AWSTemplateFormatVersion: 2010-09-09
Description: Deploy Cloud One Workload Security Demo
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: >-
      SubnetId of an existing subnet (for the primary network) in your Virtual
      Private Cloud (VPC)
    ConstraintDescription: must be an existing subnet in the selected Virtual Private Cloud.
  KeyPairName:
    Type: 'String'
    Description: >-
      Name of the Keypair
    ConstraintDescription: must be an existing keypair in the selected region.
  WSPolicyId:
    Type: Number
    Description: Policy ID of the security policy to be deployed on the EC2 Instance
    ConstraintDescription: must be valid Policy Id from Workload Security.
    Default: 1
  WSApiKey:
    Type: String
    Description: API Key from Workload Security Console
    ConstraintDescription: must be valid API Key from Workload Security.
Mappings:
  ImageId:
    us-east-1:
      HVM64: ami-01893222c83843146
    us-east-2:
      HVM64: ami-06ad6c264ce8dab0d
    us-west-1:
      HVM64: ami-0ff7fc535d3457221
    us-west-2:
      HVM64: ami-0b3456eff9b6f87f1
    ca-central-1:
      HVM64: ami-0b41a64dce89f27e3
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap 
        - ImageId
        - !Ref 'AWS::Region'
        - HVM64
      InstanceInitiatedShutdownBehavior: stop
      # DisableApiTermination: true
      InstanceType: t3a.medium
      IamInstanceProfile: !Ref SSMIAMInstanceProfile
      KeyName: !Ref KeyPairName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group - cloudone-serverless-demo
      GroupName: cloudone-serverless-demo
      SecurityGroupIngress:
        - CidrIp: 99.251.123.74/32
          Description: Manual SSH Access
          FromPort: 22
          ToPort: 22
          IpProtocol: TCP
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      VpcId: !Ref VpcId
  SSMIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: cloudone-serverless-demo-SSM-Role
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - 'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
      Path: /
      RoleName: cloudone-serverless-demo-SSM-Role
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
  SSMIAMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: cloudone-serverless-demo-SSM-InstanceProfile
      Path: /
      Roles:
        - !Ref SSMIAMRole  
  InstallTools:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: 0. Install Tools
        parameters:
          ssmWSApiKey:
            description: (Required) Specify your Cloud One Workload Security API Key.
            type: String
            default: "{{ssm:WSApiKey}}"
          ssmWSPolicyId:
            description: (Required) Specify your Cloud One Workload Security Policy ID.
            type: String
            default: "{{ssm:WSPolicyId}}"
        mainSteps:
          - action: 'aws:downloadContent'
            name: downloadGitHubContent
            inputs:
              sourceType: 'GitHub'
              sourceInfo: >-
                {
                  "owner": "GeorgeDavis-TM",
                  "repository": "cloudone-serverless-demo",
                  "getOptions": "branch:main",
                  "path": "scripts/install-dsa.sh",
                  "tokenInfo": "{{ssm-secure:georgedGitHubPAT}}"
                }
              destinationPath: '/home/ec2-user/'
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:              
              runCommand:          
                - ./install-dsa.sh {{ssmWSApiKey}} {{ssmWSPolicyId}}
              workingDirectory: '/home/ec2-user/'
              timeoutSeconds: '600'
      DocumentFormat: JSON
      DocumentType: Command
      Name: InstallTools
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
    # DependsOn:
    #   - SSMWSApiKey    
  InstallNodejs:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: 1. Install Node.js        
        mainSteps:
          - action: 'aws:downloadContent'
            name: downloadGitHubContent
            inputs:
              sourceType: 'GitHub'
              sourceInfo: >-
                {
                  "owner": "GeorgeDavis-TM",
                  "repository": "cloudone-serverless-demo",
                  "getOptions": "branch:main",
                  "path": "scripts/install-nvm.sh",
                  "tokenInfo": "{{ssm-secure:georgedGitHubPAT}}"
                }
              destinationPath: '/home/ec2-user/'
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:              
              runCommand:                                  
                - ./install-nvm.sh
              workingDirectory: '/home/ec2-user/'
              timeoutSeconds: '600'
      DocumentFormat: JSON
      DocumentType: Command
      Name: InstallNodejs
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
  InstallVenv:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: 2. Install Virtualenv        
        mainSteps:
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:
              timeoutSeconds: '60'
              runCommand:
                - pip3 install virtualenv
      DocumentFormat: JSON
      DocumentType: Command
      Name: InstallVenv
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
  DeployFSS:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: Deploy FSS Attack Serverless Demo    
        mainSteps:
          - action: 'aws:downloadContent'
            name: downloadGitHubContent
            inputs:
              sourceType: 'GitHub'
              sourceInfo: >-
                {
                  "owner": "GeorgeDavis-TM",
                  "repository": "cloudone-serverless-demo",
                  "getOptions": "branch:main",
                  "path": "scripts/deploy-fss.sh",
                  "tokenInfo": "{{ssm-secure:georgedGitHubPAT}}"
                }
              destinationPath: '/home/ec2-user/'
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:              
              runCommand:                                  
                - ./deploy-fss.sh
              workingDirectory: '/home/ec2-user/'
              timeoutSeconds: '600'
      DocumentFormat: JSON
      DocumentType: Command
      Name: DeployFSS
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
  DeployWS:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: Deploy Workload Attack
        parameters:
          ssmWsApiKey:
            description: (Required) Specify your Cloud One Workload Security API Key.
            type: String
            default: "{{ssm:WSApiKey}}"
        mainSteps:
          - action: 'aws:downloadContent'
            name: downloadGitHubContent
            inputs:
              sourceType: 'GitHub'
              sourceInfo: >-
                {
                  "owner": "GeorgeDavis-TM",
                  "repository": "cloudone-serverless-demo",
                  "getOptions": "branch:main",
                  "path": "scripts/deploy-ws.sh",
                  "tokenInfo": "{{ssm-secure:georgedGitHubPAT}}"
                }
              destinationPath: '/home/ec2-user/'
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:              
              runCommand:                                  
                - ./deploy-ws.sh {{ssmWsApiKey}}
              workingDirectory: '/home/ec2-user/'
              timeoutSeconds: '600'
      DocumentFormat: JSON
      DocumentType: Command
      Name: DeployWS
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
  RunWSSensorCheck:
    Type: 'AWS::SSM::Document'
    Properties:
      Content:
        schemaVersion: '2.2'
        description: 0.5 Check  if Activity Monitoring is enabled on instance
        parameters:
          commands:
            type: String
            description: 0.5. Check  if Activity Monitoring is enabled on instance
            default: >-
              /opt/ds_agent/sendCommand --get GetConfiguration | grep
              "name='SENSOR'"
        mainSteps:
          - action: 'aws:runShellScript'
            name: runShellScript
            inputs:
              timeoutSeconds: '60'
              runCommand:
                - '{{ commands }}'
      DocumentFormat: JSON
      DocumentType: Command
      Name: RunWSSensorCheck
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo
      TargetType: '/AWS::EC2::Instance'
Outputs:
  EC2Instance:
    Description: Instance Id of the Challenge EC2 Instance
    Value: !Ref EC2Instance
  EC2SecurityGroup:
    Description: Security Group Id of the Challenge EC2 Security Group
    Value: !Ref EC2SecurityGroup
