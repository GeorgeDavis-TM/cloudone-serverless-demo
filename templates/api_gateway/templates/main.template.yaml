AWSTemplateFormatVersion: "2010-09-09"
Description: API Gateway for Cloud One Serverless Demo.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Cloud One Serverless Deployment Configuration"
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - C1SDStateMachineArn
      -
        Label:
          default: "DO NOT MODIFY. Backend Configuration"
        Parameters:
          - DefaultAPIGatewayStage
          - TriggerStateMachineLambdaFunctionName
    ParameterLabels:
      QSS3BucketName:
        default: "S3 Bucket Name that contains the Deployment resources"
      QSS3KeyPrefix:
        default: "S3 Key Prefix for the Deployment resources"
      C1SDStateMachineArn:
        default: "ARN of the C1SD State Machine"
      # FSSIngestBucket:
      #   default: "FSS S3 Ingest Bucket"

Parameters:
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: cloudonedemo
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: "cloudone-serverless-demo/"
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Type: String
  C1SDStateMachineArn:
    ConstraintDescription: must be a valid AWS ARN
    Description: ARN of the State Machine that runs the Cloud One Serverless Demo workflow.
    Type: String
  DefaultAPIGatewayStage:
    Default: prod
    Description: Environment name for the API Gateway
    Type: String
  TriggerStateMachineLambdaFunctionName:
    Default: TriggerStateMachineLambdaFunction-C1SD
    Type: String

Resources:
  APIGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: CloudOneServerlessDemoAPI      
      Description: Cloud One Serverless Demo API
      EndpointConfiguration:
          Types: 
            - REGIONAL
      BinaryMediaTypes:
        - 'multipart/form-data'
      ApiKeySourceType: HEADER
      DisableExecuteApiEndpoint: false
      FailOnWarnings: true
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo

  APIGatewayGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt APIGatewayIAMRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TriggerStateMachineLambdaFunction.Arn}/invocations'
      ResourceId: !GetAtt APIGatewayRestApi.RootResourceId
      RestApiId: !Ref APIGatewayRestApi

  APIGatewayPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt APIGatewayIAMRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TriggerStateMachineLambdaFunction.Arn}/invocations'
      ResourceId: !GetAtt APIGatewayRestApi.RootResourceId
      RestApiId: !Ref APIGatewayRestApi

  APIGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties: 
      AccessLogSetting: 
        DestinationArn: !GetAtt APIGatewayCloudWatchLogGroup.Arn
        Format: >-
          { "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }
      DeploymentId: !Ref APIGatewayDeployment
      Description: !Join
        - ''
        - - 'Stage for the Cloud One Serverless Demo API - '
          - !Ref DefaultAPIGatewayStage
          - '.'
      MethodSettings: 
        - ResourcePath: /
          HttpMethod: GET
          LoggingLevel: INFO
          MetricsEnabled: true
          DataTraceEnabled: false
          ThrottlingBurstLimit: 50
          ThrottlingRateLimit: 100
        - ResourcePath: /
          HttpMethod: POST
          LoggingLevel: INFO
          MetricsEnabled: true
          DataTraceEnabled: false
          ThrottlingBurstLimit: 50
          ThrottlingRateLimit: 100
      RestApiId: !Ref APIGatewayRestApi
      StageName: !Ref DefaultAPIGatewayStage
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo

  APIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment    
    Properties:
      RestApiId: !Ref APIGatewayRestApi
    DependsOn:
      - APIGatewayGetMethod
      - APIGatewayPostMethod

  APIGatewayCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: C1SDAPIGatewayCloudWatchLogGroup
      RetentionInDays: 14
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo

  APIGatewayIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: C1SDLambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt TriggerStateMachineLambdaFunction.Arn
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                Resource: 
                  - !GetAtt APIGatewayCloudWatchLogGroup.Arn
              - Effect: 'Allow'
                Action:
                  - 'logs:PutLogEvents'
                Resource: 
                  - !Sub ${APIGatewayCloudWatchLogGroup.Arn}:log-stream:*

  TriggerStateMachineLambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${TriggerStateMachineLambdaFunctionName}
      RetentionInDays: 14
      Tags:
        - Key: Owner
          Value: TrendMicro
        - Key: Product
          Value: cloudone-serverless-demo
        - Key: Name
          Value: cloudone-serverless-demo

  TriggerStateMachineLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import os
          import boto3          
          def handler(event, context):
            regionName = str(os.environ.get("REGION_NAME")) if 'REGION_NAME' in os.environ else None
            stateMachineArn = str(os.environ.get("STATE_MACHINE_ARN")) if 'STATE_MACHINE_ARN' in os.environ else None
            if regionName:
              statesClient = boto3.client('stepfunctions', region_name=regionName)
              stateMachineStartExecutionResponse = statesClient.start_execution(
                stateMachineArn=stateMachineArn               
              )
              print(str(stateMachineStartExecutionResponse))              
              response = {
                'isBase64Encoded': False,
                'statusCode': 200,
                'headers': {},
                'multiValueHeaders': {},
                'body': str(stateMachineStartExecutionResponse)
              }
              return response        
      Description: AWS Lambda function to trigger the AWS State Machine workflow - C1SD
      FunctionName: !Ref TriggerStateMachineLambdaFunctionName
      Handler: index.handler
      MemorySize: 128
      Runtime: python3.8
      Environment:
        Variables:
          REGION_NAME: !Ref "AWS::Region"
          STATE_MACHINE_ARN: !Ref C1SDStateMachineArn
      Role: !GetAtt TriggerStateMachineLambdaIAMRole.Arn
      Timeout: 180

  TriggerStateMachineLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: stateMachineTriggerPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - 'states:*'
                Resource: "*"
              - Effect: 'Allow'
                Action:                  
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                Resource:
                  - !GetAtt TriggerStateMachineLambdaFunctionLogGroup.Arn
              - Effect: 'Allow'
                Action:                  
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub ${TriggerStateMachineLambdaFunctionLogGroup.Arn}:log-stream:*
      Path: '/'

# Outputs
Outputs:
  APIGatewayArn:
    Value: !Ref APIGatewayRestApi
    Description: "ARN of the API Gateway created for the CloudOneServerlessDemo API"

  APIGatewayInvokeURL:
    Value: !Sub https://${APIGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/
    Description: "REST API Endpoint of the API Gateway that can be used to trigger the SSM Run Command Invocation"

  APIGatewayStageName:
    Value: !Ref APIGatewayStage
    Description: "Environment name for the API Gateway"